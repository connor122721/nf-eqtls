// nextflow.config for use in DNA filtration + kinship pipeline

// Define parameters
params {

    // General parameters
    threads = 8
    memory = '30 GB'
    partition = 'standard'
    account = 'manichaikul'
    
    // Directories
    wd = "/standard/vol185/TOPMed/Freeze_10b/88293/topmed-dcc/exchange/phs001217_TOPMed_WGS_GenSalt/Combined_Study_Data/Genotypes/freeze.10b/phased"
    out = "/standard/vol185/cphg_Manichaikul/users/csm6hg/nextflow_dna/output"
    scripts_dir = "/standard/vol185/cphg_Manichaikul/users/csm6hg/nextflow_dna/scripts"

    // Raw gene count data
    gene_count_file = "/standard/vol185/TOPMed/TOPCHef/82214/topmed-dcc/exchange/phs002038_TOPMed_TOPCHeF/Omics/RNASeq/release3/TOPMed_Taylor_P4.RNASeQCv2.3.6_gene_reads.gct.gz"
    
    // Metadata
    samp = "/standard/vol185/cphg_Manichaikul/users/csm6hg/metadata/topchef_samples_bcf.txt"
    metadata = "/standard/vol185/cphg_Manichaikul/users/csm6hg/metadata/metadata_10_17_2024_CSM.txt"
    chrom_file = "/standard/vol185/cphg_Manichaikul/users/csm6hg/data/chromosomes"

    // Script inputs
    gtf = "/standard/vol185/cphg_Manichaikul/users/csm6hg/genome_files/gencode.v34.GRCh38.annotation.gtf"
    gtf_streamlined = "/standard/vol185/cphg_Manichaikul/users/csm6hg/genome_files/gencode.v34.GRCh38.ERCC.genes.collapsed.streamlined.RDS"
    mapp_file = "/standard/vol185/cphg_Manichaikul/users/csm6hg/data/hg38_gene_mappability.txt.gz"
    
    // GWAS inputs
    gwas_levin = "/standard/vol185/cphg_Manichaikul/users/csm6hg/data/HF-multiancestry-maf0.01.tsv.gz"
    gwas_shah = "/standard/vol185/cphg_Manichaikul/users/csm6hg/data/ShahS_31919418_HeartFailure.gz"
    gwas_jurgens = "/standard/vol185/cphg_Manichaikul/users/csm6hg/data/DCM_GWAS/Jurgens_DCM_GWAS_META_BiobanksOnly.tsv.gz"

    // Output - VCF, Bed, and other files
    gtf_name = "gencode.v34.GRCh38.genes.collapsed.TSS"
    out_vcf_full =  "freeze.10b.pass_only.snps_indels50_mac1.phased.TOPchef.vcf.gz"
    out_vcf_filt = "filt.thin250.TOPchef.vcf.gz"
    king_bed_out = "filt.maf0.01_phased.TOPchef"
    dna_outliers = "dna_outliers.txt"
    rna_outliers = "rna_outliers.txt"
    eqtl_out = "filt.1.17.25.TOPchef"

    // Output - PCA and GDS objects
    gds_filename = "filt.thin250.TOPchef.gds"
    pca_rds = "pca.genome.filt.thin250.maf0.05.rds"
    pca_plot = "pc1_6_selfreportrace_filtsnps_maf0.05.png"
    tensorqtl_pca = "filt_dna_pc1_5_topchef.txt"
}

// Define profiles for slurm execution environment
profiles {
    slurm {
        process {
            executor = 'slurm' // Use SLURM as the executor
            clusterOptions = "--partition=${params.partition} \
            --account=${params.account}" // SLURM partition, account
            cpus = "${params.threads}" // Number of threads per job
            memory = "${params.memory}" // Memory per job
            errorStrategy = 'finish'
        }
    }
}

// Define default process settings
process {
    // Set default resource allocations
    cpus = "${params.threads}"
    memory = "${params.memory}"
    errorStrategy = 'finish'
}

withLabel:process_high {
    cpus   = { 8    * task.attempt }
    memory = { 100.GB * task.attempt }
    time   = { 1000.h  * task.attempt }
}
withLabel:process_long {
    time   = { 1000.h  * task.attempt }
}
withLabel:process_high_memory {
    memory = { 400.GB * task.attempt }
}

// Diagram configuration
dag {
    enabled = true
    file = 'flowchart.png'
    format = 'png'
}

// Report configuration
report {
    enabled = true
    file = 'report.html'
}

// Overwrite existing DAG and report files
dag.overwrite = true
report.overwrite = true
